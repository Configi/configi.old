#!/usr/bin/env bash

#/ command: cfg:fedora: "Create Fedora Linux container"
#/ usage: rerun cfg:fedora  --arg <> [ --comment <>] [ --verbose <>] [ --register <>] [ --requires <>]  --version <>  --manifest <>  --modules <>
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: ARG COMMENT VERBOSE REGISTER REQUIRES VERSION MANIFEST MODULES

. "$RERUN_MODULE_DIR/lib/functions.sh" "fedora" || {
  echo >&2 "Failed loading function library." ; exit 1 ;
}

set -o errexit -o nounset -o pipefail -o errtrace

rerun_options_parse "$@"

# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -
[ -f "$MANIFEST" ] || { echo >&2 "Not a valid manifest file."; exit 1; }
function cleanup {
    PRINT "+H" "Abort. Cleaning up..."
    buildah rm "$NAME" 2>/dev/null 1>/dev/null
    buildah rm "$SCRATCH" 2>/dev/null 1>/dev/null
    PRINT "+X" "Error encountered!"
}
trap cleanup ERR
NAME="configi-fedora-build"
FROM="registry.fedoraproject.org/fedora-minimal:$VERSION"
OPTS=""
. "$RERUN_MODULES/lib/print.sh"
PRINT "+H" "Pulling source image ($FROM)..."
. "$RERUN_MODULES/lib/buildah.sh"
PRINT "+H" "Creating dummy container..."
SCRATCH=$(buildah from scratch)
RUN dnf --setopt=install_weak_deps=False -4 --nodocs --best --security -y -q --refresh update
RUN dnf --setopt=install_weak_deps=False -4 --nodocs --best -y -q groupinstall "C Development Tools and Libraries"
RUN dnf --setopt=install_weak_deps=False -4 --nodocs --best -y -q install git
RUN dnf -y -q autoremove
RUN dnf -q clean all
RUN git clone https://github.com/Configi/configi /configi
SH "cd /configi && make"
PRINT "+H" "Copying artifacts to dummy container image..."
build=$(buildah mount "$NAME")
dummy=$(buildah mount "$SCRATCH")
cp "$build/configi/bin/cfg" "$MANIFEST" "$dummy"
mkdir "$dummy/modules"
if [ -d "$MODULES" ]
then
    cp -R "$MODULES"/. "$dummy/modules"
else
    cp -R $(dirname "$MANIFEST")/modules/. "$dummy/modules"
fi
PRINT "+H" "Removing build container..."
buildah rm "$NAME"
if [ "$ARG" = "local" ]
then
    PRINT "+H" "Committing to containers-storage..."
    buildah commit --rm --squash "$SCRATCH" "containers-storage:configi"
else
    PRINT "+H" "Committing to containers-storage as $ARG..."
    buildah commit --rm --squash "$SCRATCH" "containers-storage:$ARG"
fi
exit 113
# Done. Exit with last command exit status.
exit $?

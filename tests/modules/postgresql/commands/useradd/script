#!/usr/bin/env bash

#/ command: postgresql:useradd: "Add PostgreSQL user"
#/ usage: rerun postgresql:useradd  --arg <> [ --comment <>] [ --verbose <>] [ --register <>]  --postgresql <>  --address <>  --database <>  --password <> [ --requires <>]
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: ARG COMMENT VERBOSE REGISTER POSTGRESQL ADDRESS DATABASE PASSWORD REQUIRES

. "$RERUN_MODULE_DIR/lib/functions.sh" "useradd" || {
  echo >&2 "Failed loading function library." ; exit 1 ;
}

set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"

# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -
PGTEMP="/srv/postgresql-$POSTGRESQL/data/.__pg_temp"
. "$RERUN_MODULES/lib/print.sh"
RETRIES=5
until podman exec -it "postgresql-$POSTGRESQL" runuser postgres -c "psql postgres -1 -c 'select 1'" > /dev/null 2>&1
do
    PRINT "+C" "Waiting for PostgreSQL $POSTGRESQL to come up..."
    RETRIES=$((RETRIES-=1))
    sleep 1
    [ "$RETRIES" -eq 0 ] && exit 1
done
printf "SELECT 1 FROM pg_roles WHERE rolname=\'%s\';" $ARG > "$PGTEMP"
FOUND=$(podman exec -t "postgresql-$POSTGRESQL" runuser postgres -c "psql postgres -1tAf /data/.__pg_temp")
rm -f "$PGTEMP"
[ "$FOUND" = "1" ] && exit 0
PRINT "+C" "Creating PostgreSQL user $ARG..."
podman exec -t "postgresql-$POSTGRESQL" runuser postgres -c "createuser -d -S $ARG"
printf "ALTER USER %s WITH ENCRYPTED PASSWORD \'%s\';" $ARG $PASSWORD > "$PGTEMP"
podman exec -t "postgresql-$POSTGRESQL" runuser postgres -c "psql -1 -f /data/.__pg_temp"
rm -f "$PGTEMP"
PRINT "+H" "Adding pg_hba.conf entry for $ARG..."
echo "host $DATABASE $ARG $ADDRESS md5" >> "/srv/postgresql-$POSTGRESQL/conf/pg_hba.conf"
PRINT "!" "Done."
exit 113
# Done. Exit with last command exit status.
exit $?


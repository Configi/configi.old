#!/usr/bin/env bash

#/ command: image:push: "Push container image to remote rsync registry via SSH"
#/ usage: rerun image:push  --arg <> [ --comment <>] [ --verbose <>] [ --register <>] [ --requires <>]  --host <>  --src <> [ --tag <latest>]
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: ARG COMMENT VERBOSE REGISTER REQUIRES HOST SRC TAG

. "$RERUN_MODULE_DIR/lib/functions.sh" "push" || {
  echo >&2 "Failed loading function library." ; exit 1 ;
}

unset HOST
set -o errexit -o nounset -o pipefail -o errtrace

rerun_options_parse "$@"

# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -
# Requires skopeo, tar, xz, openssh(scp), coreutils(sha256sum)
#
. "$RERUN_MODULES/lib/functions.sh"
TMPDIR=$(mktemp -d -p .)
pushd "${TMPDIR}"
    /usr/bin/mkdir "${DEST}"
    print "Converting local image to oci-archive..."
    /usr/bin/skopeo copy "containers-storage:${SRC}" "oci-archive:${DEST}/${TAG}"
    print "Compressing image before pushing..."
    /usr/bin/sha256sum "${DEST}/${TAG}" > "${DEST}/${TAG}.sha256"
    XZ_OPT=-T0 /usr/bin/tar -cJf IMAGE.tar.xz "${DEST}"
    print "Pushing to rsync registry..."
    if [ "$HOST" = "localhost" ]
    then
        mv IMAGE.tar.xz "/srv/rsyncd/registry/${DEST}/$TAG"
    else
        /usr/bin/scp IMAGE.tar.xz "root@${HOST}:/srv/rsyncd/registry/${DEST}/${TAG}"
    fi
popd
rm -f "${TMPDIR}/${DEST}"
rmdir "${TMPDIR}"
print "Done!"
exit 112

#!/usr/bin/env bash
#
# NAME
#
#/ command: stubbs:edit:  "edit a command script"
#/ usage: stubbs:edit --command|-c <> --module|-m <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions and those defined for stubbs.
. $RERUN_MODULE_DIR/lib/functions.sh edit || { 
    echo >&2 "failed laoding function library" ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: stubbs:edit. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail


# Command implementation
# ----------------------

# Get the options
while [ "$#" -gt 0 ]; do
    OPT="$1"
    case "$OPT" in
	# options with arguments
	-c|--command)
	    rerun_option_check "$#" "$1"
		# Parse if command is named "module:command"
	 	regex='([^:]+)(:)([^:]+)'
		if [[ $2 =~ $regex ]]
		then
			MODULE=${BASH_REMATCH[1]}
			COMMAND=${BASH_REMATCH[3]}
		else
	    	COMMAND="$2"		
	    fi
	    shift
	    ;;
	-m|--module)
	    rerun_option_check "$#" "$1"
	    MODULE="$2"
	    shift
	    ;;
        # unknown option
	-?)
	    rerun_option_usage
        exit 2
	    ;;
	  # end of options, just arguments left
	*)
	    break
    esac
    shift
done

# Post process the options

[ -z "$MODULE" ] && {
    echo "Module: "
    select MODULE in $(rerun_modules $RERUN_MODULES);
    do
	echo "You picked module $MODULE ($REPLY)"
	break
    done
}

[ -z "${COMMAND:-}" ] && {
    echo "Command: "
    select COMMAND in $(rerun_commands $RERUN_MODULES $MODULE);
    do
	echo "You picked command $COMMAND ($REPLY)"
	break
    done
}

RERUN_MODULE_HOME_DIR=$(rerun_module_exists $MODULE)

# Verify this command exists
#
[ -d $RERUN_MODULE_HOME_DIR/commands/$COMMAND ] || {
    rerun_die "command not found: \""$MODULE:$COMMAND\"""
}

[ ! -f $RERUN_MODULE_HOME_DIR/commands/$COMMAND/script ] && {
    rerun_die "command script not found for $MODULE:$COMMAND. Create one with stubbs:add-command."
}

# Open the the command script

: ${EDITOR:=vi}

exec $EDITOR $RERUN_MODULE_HOME_DIR/commands/$COMMAND/script

# Done


